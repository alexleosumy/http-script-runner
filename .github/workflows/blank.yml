name: build artifact from source

on:
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    
    - name: Setup Go
      uses: actions/setup-go@v2
#      with:
#        go-version: '1.14.0'  

    - name: Install dependencies
      run: |
        go version
        go get -u golang.org/x/lint/golint
        
    - name: Run build
      run: go build . 
      
#    - name: Run vet & lint
#      run: |
#        go vet .
#        golint .

#    - run: mkdir artifact
    - name: Set env
      run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
           
    - name: 'Tar files'
      run: tar -cvzf http-script-runner_${{ env.RELEASE_VERSION }}_linux_amd64.tar.gz script-exporter
    
#    - name: 'ls'
#      run: ls -l
    
#    - name: 'show release'
#      run: echo ${GITHUB_REF##*/}
      
#    - name: Create artifact
#      uses: montudor/action-zip@v0.1.0
#      with:
#        args: zip -X artifact/http-script-runner.zip script-exporter

    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
          name: http-script-runner
          path: http-script-runner_${GITHUB_REF##*/}_linux_amd64.tar.gz
          
    - name: Upload to release
      uses: JasonEtco/upload-to-release@master
      with:
        args: http-script-runner_${GITHUB_REF##*/}_linux_amd64.tar.gz application/tar+gzip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

#    - uses: ncipollo/release-action@v1
#      with:
#        artifacts: "http-script-runner_${GITHUB_REF##*/}_linux_amd64.tar.gz"

#    - name: 'Upload Artifact'
#      uses: actions/upload-artifact@v2
#      with:
#        name: http-script-runner
#        path: ./artifact/http-script-runner_${GITHUB_REF##*/}_linux_amd64.tar.gz 
      
